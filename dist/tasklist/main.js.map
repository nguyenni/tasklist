{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-task/add-task.component.css","webpack:///./src/app/add-task/add-task.component.html","webpack:///./src/app/add-task/add-task.component.ts","webpack:///./src/app/add-task/task.model.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/common.service.ts","webpack:///./src/app/edit-task/edit-task.component.css","webpack:///./src/app/edit-task/edit-task.component.html","webpack:///./src/app/edit-task/edit-task.component.ts","webpack:///./src/app/task-list/task-list.component.css","webpack:///./src/app/task-list/task-list.component.html","webpack:///./src/app/task-list/task-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\\n<div class=\\\"modal fade\\\" id=\\\"addModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLongTitle\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">New Task</h5>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <label>Task:</label>\\n        <input class=\\\"form-control\\\" [(ngModel)]=\\\"taskItem\\\" id=\\\"ex1\\\" type=\\\"text\\\">\\n        <br>\\n        <label>Priority:</label>\\n        <br>\\n        <ngb-rating [(rate)]=\\\"itemPriority\\\" max=\\\"3\\\"></ngb-rating>\\n        <br>\\n        <br>\\n        <label>Deadline:</label>\\n        <div class=\\\"input-group\\\">\\n            <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\"\\n                   name=\\\"dp\\\" [(ngModel)]=\\\"deadline\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\n            <div class=\\\"input-group-append\\\">\\n              <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\">\\n                <img src=\\\"img/calendar-icon.svg\\\" style=\\\"width: 1.2rem; height: 1rem; cursor: pointer;\\\"/>\\n              </button>\\n            </div>\\n          </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n        <button type=\\\"button\\\" (click)=\\\"addTask()\\\" data-dismiss=\\\"modal\\\" class=\\\"btn btn-primary\\\">Add item</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CommonService } from '../common.service';\n\n\n@Component({\n  selector: 'app-add-task',\n  templateUrl: './add-task.component.html',\n  styleUrls: ['./add-task.component.css']\n})\nexport class AddTaskComponent implements OnInit {\n\n  private taskItem;\n  private itemPriority;\n  private deadline;\n\n  constructor(private commonService: CommonService) { }\n\n  addTask()Â {\n    const created = new Date();\n    const newTask = {\n      name: this.taskItem,\n      priority: this.itemPriority,\n      deadline: this.deadline,\n      created: created,\n      isDone: false\n    };\n\n    this.commonService.addTask(newTask).subscribe(res => {\n      this.commonService.add_subject.next();\n    });\n\n    this.taskItem = '';\n    this.itemPriority = '';\n    this.deadline = '';\n  }\n\n  ngOnInit() {\n  }\n\n}\n","export class Task {\n    constructor(public name: String, public priority: Number, public deadline: any, public created: Date, public isDone: Boolean) { }\n}\n","module.exports = \"\"","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1, shrink-to-fit=no\\\">\\n \\n</head>\\n\\n<body>\\n  <br>\\n  <br>\\n  <div class=\\\"container\\\">\\n    <div class=\\\"header clearfix\\\">\\n      <nav>\\n        <ul class=\\\"nav nav-pills float-right\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a data-toggle=\\\"modal\\\" data-target=\\\"#addModal\\\" class=\\\"nav-link active\\\" href=\\\"#\\\">Add <span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n        </ul>\\n      </nav>\\n      <h3 class=\\\"text-muted\\\">Task List</h3>\\n    </div>\\n    \\n    <app-task-list></app-task-list>\\n    <app-add-task></app-add-task>\\n  </div>\\n</body>\\n\\n</html>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { AddTaskComponent } from './add-task/add-task.component';\nimport { EditTaskComponent } from './edit-task/edit-task.component';\nimport { TaskListComponent } from './task-list/task-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddTaskComponent,\n    EditTaskComponent,\n    TaskListComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    NgbModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Task } from './add-task/task.model';\nimport { Subject } from 'rxjs';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n\n  public taskList: Task[];\n  public add_subject = new Subject<String>();\n\n  constructor(private http: Http) {\n    this.taskList = [];\n  }\n\n  addTask(task) {\n    return this.http.post('/api/task', task);\n  }\n\n  updateTask(task) {\n    return this.http.put('/api/task/' + task._id, task);\n  }\n\n  deleteTask(id) {\n    return this.http.delete('api/task/' + id);\n  }\n\n  getTasks()Â {\n    return this.http.get('/api/tasks');\n  }\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"task\\\">\\n  <div class=\\\"modal fade\\\" id=\\\"editModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLongTitle\\\" aria-hidden=\\\"true\\\">\\n<div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n  <div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header\\\">\\n      <h5 class=\\\"modal-title\\\">Edit Task</h5>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <label>Name: </label>\\n      <input class=\\\"form-control\\\" [(ngModel)]=\\\"task.name\\\" type=\\\"text\\\">\\n      <br>\\n      <label>Priority: </label>\\n      <br>\\n      <ngb-rating [(rate)]=\\\"task.priority\\\" max=\\\"3\\\"></ngb-rating>\\n      <br>\\n      <br>\\n      <label>Deadline: </label>\\n      <div class=\\\"input-group\\\">\\n          <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\"\\n                 name=\\\"dp\\\" [(ngModel)]=\\\"task.deadline\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\n          <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\">\\n              <img src=\\\"img/calendar-icon.svg\\\" style=\\\"width: 1.2rem; height: 1rem; cursor: pointer;\\\"/>\\n            </button>\\n          </div>\\n      </div>\\n      <br>\\n      <label>Created on: </label> {{task.created | date:'yyyy-MM-dd HH:mm'}}\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" (click)=\\\"updateTask(task)\\\" data-dismiss=\\\"modal\\\" class=\\\"btn btn-primary\\\">Save</button>\\n    </div>\\n  </div>\\n</div>\\n</div>\\n</div>\\n\\n\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Task } from '../add-task/task.model';\nimport { CommonService } from '../common.service';\nimport { TaskListComponent } from '../task-list/task-list.component';\n\n@Component({\n  selector: 'app-edit-task',\n  templateUrl: './edit-task.component.html',\n  styleUrls: ['./edit-task.component.css']\n})\nexport class EditTaskComponent implements OnInit {\n  @Input() task: Task;\n\n  constructor(private commonService: CommonService, private taskListComponent: TaskListComponent) { }\n\n  ngOnInit() {\n  }\n\n  updateTask(task) {\n    const _task = {\n      _id: task._id,\n      name: task.name,\n      priority: task.priority,\n      deadline: task.deadline,\n      created: task.created,\n      isDone: task.isDone\n    };\n\n    this.commonService.updateTask(_task).subscribe(res => {\n      this.taskListComponent.getAllTasks();\n    });\n  }\n\n}\n","module.exports = \".listContainer{\\n    border: 1px solid rgb(187, 170, 170);\\n    border-radius: 10px;\\n    padding: 30px;\\n  }\\n  \"","module.exports = \"<br>\\n<div class=\\\"listContainer\\\">\\n    <ul class=\\\"list-group\\\" *ngFor=\\\"let task of taskList\\\">\\n        <li class=\\\"list-group-item\\\" (click)=\\\"onSelect(task)\\\">\\n            <table style=\\\"width: 100%\\\">\\n                <td style=\\\"width:10%\\\">\\n                    <input type=\\\"checkbox\\\" [checked]=\\\"task.isDone\\\" (click)=\\\"updateTask(task)\\\">\\n                </td>\\n                <td style=\\\"width:50%\\\">\\n                    {{task.name}}\\n                </td>\\n                <td>\\n                    <ngb-rating [(rate)]=\\\"task.priority\\\" [readonly]=\\\"true\\\" max=\\\"3\\\"></ngb-rating>\\n                </td>\\n                <td style=\\\"width:20%\\\">\\n                    Due on: {{task.deadline.year}}-{{task.deadline.month}}-{{task.deadline.day}}\\n                </td>\\n                <td style=\\\"text-align: right\\\">\\n                    <a data-toggle=\\\"modal\\\" data-target=\\\"#editModal\\\" class=\\\"nav-link active\\\" href=\\\"#\\\">Edit</a>\\n                </td>\\n                <td style=\\\"text-align: right\\\">\\n                    <button type=\\\"button\\\" (click)=\\\"deleteTask(task._id)\\\" data-dismiss=\\\"modal\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n                </td>\\n            </table>\\n        </li>\\n    </ul>\\n</div>\\n<br>\\n\\n<div style=\\\"text-align: right\\\">\\n    <button type=\\\"button\\\" (click)=\\\"removeCompleted(taskList)\\\" data-dismiss=\\\"modal\\\" class=\\\"btn btn-danger\\\">Delete Completed</button>\\n</div>\\n\\n<app-edit-task [task]=\\\"selectedTask\\\"></app-edit-task>\\n    \"","import { Component, OnInit } from '@angular/core';\nimport { CommonService } from '../common.service';\nimport { Task } from '../add-task/task.model';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.css']\n})\nexport class TaskListComponent implements OnInit {\n\n  private taskList: Task[];\n  selectedTask: Task;\n\n  constructor(private commonService: CommonService) {\n  }\n\n  ngOnInit() {\n    this.getAllTasks();\n    this.commonService.add_subject.subscribe(res => {\n      this.getAllTasks();\n    });\n  }\n\n  onSelect(task: Task): void {\n    this.selectedTask = task;\n  }\n\n  updateTask(task) {\n    task.isDone = !task.isDone;\n    const _task = {\n      _id: task._id,\n      name: task.name,\n      priority: task.priority,\n      deadline: task.deadline,\n      created: task.created,\n      isDone: task.isDone\n    };\n\n    this.commonService.updateTask(_task).subscribe(res => {\n      this.getAllTasks();\n    });\n  }\n\n  deleteTask(id) {\n    this.commonService.deleteTask(id).subscribe(res => {\n      this.getAllTasks();\n    });\n  }\n\n  removeCompleted(taskList) {\n    taskList.forEach((task) => {\n      if (task.isDone) {\n        this.deleteTask(task._id);\n      }\n    });\n  }\n\n  getAllTasks() {\n    this.commonService.getTasks().subscribe(res => {\n      this.taskList = res.json();\n\n      // Sort the tasks (by date and priority) for display\n      // https://stackoverflow.com/questions/8837454/sort-array-of-objects-by-single-key-with-date-value\n      this.taskList.sort(function(a, b) {\n        if (a.priority > b.priority) {\n          return -1;\n        }\n        if (a.priority < b.priority) {\n          return 1;\n        }\n        return 0;\n      }).sort(function(a, b) {\n        const dateA = new Date(a.deadline.year, a.deadline.month, a.deadline.day);\n        const dateB = new Date(b.deadline.year, b.deadline.month, b.deadline.day);\n        if (dateA < dateB) {\n          return -1;\n        }\n        if (dateA > dateB) {\n          return 1;\n        }\n        return 0;\n      });\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}